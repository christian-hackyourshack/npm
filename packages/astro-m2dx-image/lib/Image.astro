---
import { Image } from '@astrojs/image/components';
import { parseAspectRatio } from '.';
import { getAspectRatio, getFallbackAspectRatio, getFallbackWidth, resolveSrc } from './internal';
import type { CallbackProps, ImageProps } from './types';

export interface Props extends ImageProps {}

const props = Astro.props as CallbackProps;
props.src = await resolveSrc(props.src);

props.width ??= props.src.width;
props.height ??= props.src.height;
if (!props.width || !props.height) {
  const src = props.src.src;
  const alt = props.alt;
  const aspectRatio =
    parseAspectRatio(getAspectRatio(props)) ?? //
    getFallbackAspectRatio(src, alt);
  if (props.width) {
    props.height = Math.round(props.width / aspectRatio);
  } else if (props.height) {
    props.width = Math.round(props.height * aspectRatio);
  } else {
    props.width = getFallbackWidth(src, alt);
    props.height = Math.round(props.width / aspectRatio);
  }
}
---

<Image {...props} />
